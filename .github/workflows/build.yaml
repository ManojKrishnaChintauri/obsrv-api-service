name: Deploy workflow for Obsrv-API

on:
  push:
    branches:
    - actions-build
    
jobs:
  docker:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v2

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    

    - name: Authenticate Docker
      run: |
        docker login -u "sanketikahub" -p "${{ secrets.DOCKER_PASSWORD }}" docker.io

    
    - name: Build Docker image
      run: |
        docker build -t sanketikahub/obsrv-api-service:1.0.0 -f Dockerfile .
        docker push sanketikahub/obsrv-api-service:1.0.0
      
    - name: Fetch kubeconfig
      run: |
        aws eks --region us-east-2 update-kubeconfig --name obsrv-dev-eks
        kubectl get ns

    - name: Install api helm chart
      run: |
        kubectl create ns obsrv-api-service-local
        helm upgrade --install obsrv-api . -n obsrv-api-service-local --atomic


        
    #  - name: 'Deploy'
    #   uses: bitovi/github-actions-deploy-eks-helm@v1.1.0
    #   # uses: vimeda/helm@v1.6.8
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     # cluster-role-arn: arn:aws:iam::131795456882:user/hcx
    #     aws-region: us-east-2
    #     # aws-profile: git-deploy
    #     cluster-name: ${{ github.event.inputs.environment }}-cluster
    #     name: 'api-gateway'
    #     namespace: '${{ github.event.inputs.environment }}'
    #     # release: api-gateway
    #     chart-path: 'hcx-devops/application/helm/core/api-gateway/'
    #     config-files: 'hcx-devops/application/helm/core/api-gateway/values.yaml, hcx/ansible/inventory/${{ github.event.inputs.environment }}/group_vars/${{ github.event.inputs.environment }}.yaml' #, https://github.com/Swasth-Digital-Health-Foundation/DevOps/blob/workflow/hcx/ansible/inventory/dev/group_vars/dev.yaml'
    #    # token: '${{ github.token }}'
    #     values: |
    #       common.image.tag=${{ env.IMAGE_TAG }}
